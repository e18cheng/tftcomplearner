{"version":3,"sources":["constants.js","components/Composition.js","components/ChampionList.js","components/GuessList.js","components/ChampionSelector.js","App.js","reportWebVitals.js","index.js"],"names":["ChampionData","require","MetaComps","Composition","props","state","value","onClick","setState","Constants","Math","floor","random","length","this","React","Component","ChampionList","champListClick","champion","sendChampListClick","champList","map","i","src","process","name","replace","style","cursor","width","height","alt","GuessList","guessListClick","sendGuessListClick","top","ChampionSelector","getChampListClick","indexOf","getGuessListClick","filter","c","bottom","forEach","push","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"24LAAaA,EAAeC,EAAQ,IAEvBC,EAAY,CACrB,SACA,QACA,UACA,WACA,eACA,WACA,SACA,gB,OCPSC,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,MAHQ,EADvB,0CAQI,WAAU,IAAD,OACP,OACE,qCACE,8BACE,wBACEC,QAAS,kBACP,EAAKC,SAAS,CACZF,MACEG,EACEC,KAAKC,MAAMD,KAAKE,SAAWH,EAAoBI,YALzD,yBAaF,8BACE,4BAAIC,KAAKT,MAAMC,iBA1B3B,GAAiCS,IAAMC,W,OCD1BC,EAAb,4MACIC,eAAiB,SAACC,GAChB,EAAKf,MAAMgB,mBAAmBD,IAFpC,4CAKI,WAAU,IAAD,OACP,OACE,mCACGL,KAAKV,MAAMiB,UAAUC,KAAI,SAACH,EAAUI,GACnC,OACE,qBACEC,IACEC,kCAEAN,EAASO,KAAKC,QAAQ,MAAO,IAC7B,OAEFpB,QAAS,kBAAM,EAAKW,eAAeC,IACnCS,MAAO,CAAEC,OAAQ,UAAWC,MAAO,GAAIC,OAAQ,IAC/CC,IAAKb,EAASO,gBAnB9B,GAAkCX,IAAMC,WCA3BiB,EAAb,4MACIC,eAAiB,SAACf,GAChB,EAAKf,MAAM+B,mBAAmBhB,IAFpC,4CAKI,WAAU,IAAD,OACP,OACE,mCACGL,KAAKV,MAAMgC,IAAId,KAAI,SAACH,EAAUI,GAC7B,OACE,qBACEC,IACEC,kCAEAN,EAASO,KAAKC,QAAQ,MAAO,IAC7B,OAEFpB,QAAS,kBAAM,EAAK2B,eAAef,IACnCS,MAAO,CAAEC,OAAQ,UAAWC,MAAO,GAAIC,OAAQ,IAC/CC,IAAKb,EAASO,gBAnB9B,GAA+BX,IAAMC,WCKxBqB,EAAb,kDACI,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAWRkC,kBAAoB,SAACnB,IAEJ,IADH,EAAKd,MAAM+B,IAAIG,QAAQpB,IAEjC,EAAKX,SAAS,CAAE4B,IAAI,GAAD,mBAAM,EAAK/B,MAAM+B,KAAjB,CAAsBjB,OAf1B,EAmBnBqB,kBAAoB,SAACrB,IAEJ,IADH,EAAKd,MAAM+B,IAAIG,QAAQpB,IAEjC,EAAKX,SAAS,CACZ4B,IAAK,EAAK/B,MAAM+B,IAAIK,QAAO,SAAUC,GACnC,OAAOA,IAAMvB,QAtBnB,EAAKd,MAAQ,CACX+B,IAAK,GACLO,OAAQ,IAGV,EAAKtB,UAAY,GACjBZ,EAAuBmC,SAAQ,SAACzB,GAC9B,EAAKE,UAAUwB,KAAK1B,MATL,EADvB,0CA+BI,WACE,OACE,qCACE,cAAC,EAAD,CACEiB,IAAKtB,KAAKT,MAAM+B,IAChBD,mBAAoBrB,KAAK0B,kBAAkBM,KAAKhC,QAElD,uBACA,cAAC,EAAD,CACEO,UAAWP,KAAKO,UAChBD,mBAAoBN,KAAKwB,kBAAkBQ,KAAKhC,eAzC5D,GAAsCC,IAAMC,WCS7B+B,MAVf,WACE,OACE,gCACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.784394c7.chunk.js","sourcesContent":["export const ChampionData = require(\"./tft_data/champions.json\")\n\nexport const MetaComps = [\n    \"Lucian\",\n    \"Kayle\",\n    \"Rangers\",\n    \"Nocturne\",\n    \"Fortnite Jax\",\n    \"Abom + X\",\n    \"Draven\",\n    \"Vayne Reroll\",\n  ]","import React from \"react\";\nimport * as Constants from \"../constants.js\"\n\nexport class Composition extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: null,\n      };\n    }\n  \n    render() {\n      return (\n        <>\n          <div>\n            <button\n              onClick={() =>\n                this.setState({\n                  value:\n                    Constants.MetaComps[\n                      Math.floor(Math.random() * Constants.MetaComps.length)\n                    ],\n                })\n              }\n            >\n              Give Comp\n            </button>\n          </div>\n          <div>\n            <p>{this.state.value}</p>\n          </div>\n        </>\n      );\n    }\n  }","import React from \"react\";\n\nexport class ChampionList extends React.Component {\n    champListClick = (champion) => {\n      this.props.sendChampListClick(champion);\n    };\n  \n    render() {\n      return (\n        <>\n          {this.props.champList.map((champion, i) => {\n            return (\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  \"/champions/TFT5_\" +\n                  champion.name.replace(/\\s/g, \"\") +\n                  \".png\"\n                }\n                onClick={() => this.champListClick(champion)}\n                style={{ cursor: \"pointer\", width: 75, height: 75 }}\n                alt={champion.name}\n              />\n            );\n          })}\n        </>\n      );\n    }\n  }","import React from \"react\";\n\nexport class GuessList extends React.Component {\n    guessListClick = (champion) => {\n      this.props.sendGuessListClick(champion);\n    };\n  \n    render() {\n      return (\n        <>\n          {this.props.top.map((champion, i) => {\n            return (\n              <img\n                src={\n                  process.env.PUBLIC_URL +\n                  \"/champions/TFT5_\" +\n                  champion.name.replace(/\\s/g, \"\") +\n                  \".png\"\n                }\n                onClick={() => this.guessListClick(champion)}\n                style={{ cursor: \"pointer\", width: 75, height: 75 }}\n                alt={champion.name}\n              />\n            );\n          })}\n        </>\n      );\n    }\n  }","import React from \"react\";\n\nimport * as Constants from \"../constants.js\";\nimport { ChampionList } from \"./ChampionList.js\";\nimport { GuessList } from \"./GuessList.js\";\n\n\nexport class ChampionSelector extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        top: [],\n        bottom: [],\n      };\n  \n      this.champList = [];\n      Constants.ChampionData.forEach((champion) => {\n        this.champList.push(champion);\n      });\n    }\n    getChampListClick = (champion) => {\n      var index = this.state.top.indexOf(champion);\n      if (index === -1) {\n        this.setState({ top: [...this.state.top, champion] });\n      }\n    };\n  \n    getGuessListClick = (champion) => {\n      var index = this.state.top.indexOf(champion);\n      if (index !== -1) {\n        this.setState({\n          top: this.state.top.filter(function (c) {\n            return c !== champion;\n          }),\n        });\n      }\n    };\n  \n    render() {\n      return (\n        <>\n          <GuessList\n            top={this.state.top}\n            sendGuessListClick={this.getGuessListClick.bind(this)}\n          />\n          <hr></hr>\n          <ChampionList\n            champList={this.champList}\n            sendChampListClick={this.getChampListClick.bind(this)}\n          />\n        </>\n      );\n    }\n  }","import \"./App.css\";\n\nimport React from \"react\";\nimport { Composition } from \"./components/Composition.js\";\nimport { ChampionSelector } from \"./components/ChampionSelector.js\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>TFT Comps</h1>\n      <Composition />\n      <ChampionSelector />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
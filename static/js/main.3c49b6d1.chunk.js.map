{"version":3,"sources":["constants.js","App.js","reportWebVitals.js","index.js"],"names":["ChampionData","require","MetaComps","Composition","props","state","value","onClick","setState","Constants","Math","floor","random","length","this","React","Component","ChampionSelector","top","bottom","forEach","champion","push","map","i","src","process","name","replace","indexOf","filter","c","topClick","style","cursor","width","height","alt","botClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"44LAAaA,G,MAAeC,EAAQ,KAEvBC,EAAY,CACrB,SACA,QACA,UACA,WACA,eACA,WACA,SACA,gB,OCLEC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,MAHQ,E,0CAOnB,WAAU,IAAD,OACP,OACE,qCACE,8BACE,wBACEC,QAAS,kBACP,EAAKC,SAAS,CACZF,MACEG,EACEC,KAAKC,MAAMD,KAAKE,SAAWH,EAAoBI,YALzD,yBAaF,8BACE,4BAAIC,KAAKT,MAAMC,iB,GA1BCS,IAAMC,WAiC1BC,E,kDACJ,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXa,IAAK,GACLC,OAAQ,IAGVV,EAAuBW,SAAQ,SAACC,GAC9B,EAAKhB,MAAMa,IAAII,KAAKD,MARL,E,0CAYnB,WAAU,IAAD,OAyBP,OACE,qCACGP,KAAKT,MAAMa,IAAIK,KAAI,SAACF,EAAUG,GAC7B,OACE,qBACEC,IACEC,kCAEAL,EAASM,KAAKC,QAAQ,MAAO,IAC7B,OAEFrB,QAAS,kBAnCF,SAACc,IAED,IADH,EAAKhB,MAAMa,IAAIW,QAAQR,KAEjC,EAAKb,SAAS,CACZU,IAAK,EAAKb,MAAMa,IAAIY,QAAO,SAAUC,GACnC,OAAOA,IAAMV,OAGjB,EAAKb,SAAS,CAAEW,OAAO,GAAD,mBAAM,EAAKd,MAAMc,QAAjB,CAAyBE,OA2B1BW,CAASX,IACxBY,MAAO,CAAEC,OAAQ,UAAWC,MAAO,GAAIC,OAAQ,IAC/CC,IAAKhB,EAASM,UAIpB,uBACCb,KAAKT,MAAMc,OAAOI,KAAI,SAACF,EAAUG,GAChC,OACE,qBACEC,IACEC,kCAEAL,EAASM,KAAKC,QAAQ,MAAO,IAC7B,OAEFrB,QAAS,kBAvCF,SAACc,IAED,IADH,EAAKhB,MAAMc,OAAOU,QAAQR,KAEpC,EAAKb,SAAS,CACZW,OAAQ,EAAKd,MAAMc,OAAOW,QAAO,SAAUC,GACzC,OAAOA,IAAMV,OAGjB,EAAKb,SAAS,CAAEU,IAAI,GAAD,mBAAM,EAAKb,MAAMa,KAAjB,CAAsBG,OA+BpBiB,CAASjB,IACxBY,MAAO,CAAEC,OAAQ,UAAWC,MAAO,GAAIC,OAAQ,IAC/CC,IAAKhB,EAASM,iB,GAnEGZ,IAAMC,WAsFtBuB,MAVf,WACE,OACE,gCACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QC3GSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c49b6d1.chunk.js","sourcesContent":["export const ChampionData = require(\"./tft_data/champions.json\")\n\nexport const MetaComps = [\n    \"Lucian\",\n    \"Kayle\",\n    \"Rangers\",\n    \"Nocturne\",\n    \"Fortnite Jax\",\n    \"Abom + X\",\n    \"Draven\",\n    \"Vayne Reroll\",\n  ]","import \"./App.css\";\n\nimport React from \"react\";\nimport * as Constants from \"./constants.js\";\n\nclass Composition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <button\n            onClick={() =>\n              this.setState({\n                value:\n                  Constants.MetaComps[\n                    Math.floor(Math.random() * Constants.MetaComps.length)\n                  ],\n              })\n            }\n          >\n            Give Comp\n          </button>\n        </div>\n        <div>\n          <p>{this.state.value}</p>\n        </div>\n      </>\n    );\n  }\n}\n\nclass ChampionSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      top: [],\n      bottom: [],\n    };\n\n    Constants.ChampionData.forEach((champion) => {\n      this.state.top.push(champion);\n    });\n  }\n\n  render() {\n    const topClick = (champion) => {\n      var index = this.state.top.indexOf(champion);\n      if (index !== -1) {\n        this.setState({\n          top: this.state.top.filter(function (c) {\n            return c !== champion;\n          }),\n        });\n        this.setState({ bottom: [...this.state.bottom, champion] });\n      }\n    };\n\n    const botClick = (champion) => {\n      var index = this.state.bottom.indexOf(champion);\n      if (index !== -1) {\n        this.setState({\n          bottom: this.state.bottom.filter(function (c) {\n            return c !== champion;\n          }),\n        });\n        this.setState({ top: [...this.state.top, champion] });\n      }\n    };\n\n    return (\n      <>\n        {this.state.top.map((champion, i) => {\n          return (\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"/champions/TFT5_\" +\n                champion.name.replace(/\\s/g, \"\") +\n                \".png\"\n              }\n              onClick={() => topClick(champion)}\n              style={{ cursor: \"pointer\", width: 75, height: 75 }}\n              alt={champion.name}\n            />\n          );\n        })}\n        <hr></hr>\n        {this.state.bottom.map((champion, i) => {\n          return (\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"/champions/TFT5_\" +\n                champion.name.replace(/\\s/g, \"\") +\n                \".png\"\n              }\n              onClick={() => botClick(champion)}\n              style={{ cursor: \"pointer\", width: 75, height: 75 }}\n              alt={champion.name}\n            />\n          );\n        })}\n      </>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1>TFT Comps</h1>\n      <Composition />\n      <ChampionSelector />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
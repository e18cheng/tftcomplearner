{"version":3,"sources":["constants.js","App.js","reportWebVitals.js","index.js"],"names":["ChampionData","require","MetaComps","Composition","props","state","value","onClick","setState","Constants","Math","floor","random","length","this","React","Component","ChampionSelector","map","champion","i","src","process","name","replace","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q4LAAaA,G,MAAeC,EAAQ,KAEvBC,EAAY,CACrB,SACA,QACA,UACA,WACA,eACA,WACA,SACA,gB,OCLEC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,MAHQ,E,0CAOnB,WAAU,IAAD,OACP,OACE,qCACE,8BACE,wBACEC,QAAS,kBACP,EAAKC,SAAS,CACZF,MACEG,EACEC,KAAKC,MAAMD,KAAKE,SAAWH,EAAoBI,YALzD,yBAaF,8BACE,4BAAIC,KAAKT,MAAMC,iB,GA1BCS,IAAMC,WAiC1BC,E,4JACJ,WACE,OACE,mCACGR,EAAuBS,KAAI,SAACC,EAAUC,GACrC,OACE,qBACEC,IACEC,kCAEAH,EAASI,KAAKC,QAAQ,MAAO,IAC7B,OAEFC,IAAKN,EAASI,gB,GAbGR,IAAMC,WAgCtBU,MAVf,WACE,OACE,gCACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCrDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.68a3ef48.chunk.js","sourcesContent":["export const ChampionData = require(\"./tft_data/champions.json\")\n\nexport const MetaComps = [\n    \"Lucian\",\n    \"Kayle\",\n    \"Rangers\",\n    \"Nocturne\",\n    \"Fortnite Jax\",\n    \"Abom + X\",\n    \"Draven\",\n    \"Vayne Reroll\",\n  ]","import \"./App.css\";\n\nimport React from \"react\";\nimport * as Constants from \"./constants.js\";\n\nclass Composition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <button\n            onClick={() =>\n              this.setState({\n                value:\n                  Constants.MetaComps[\n                    Math.floor(Math.random() * Constants.MetaComps.length)\n                  ],\n              })\n            }\n          >\n            Give Comp\n          </button>\n        </div>\n        <div>\n          <p>{this.state.value}</p>\n        </div>\n      </>\n    );\n  }\n}\n\nclass ChampionSelector extends React.Component {\n  render() {\n    return (\n      <>\n        {Constants.ChampionData.map((champion, i) => {\n          return (\n            <img\n              src={\n                process.env.PUBLIC_URL +\n                \"/champions/TFT5_\" +\n                champion.name.replace(/\\s/g, \"\") +\n                \".png\"\n              }\n              alt={champion.name}\n            />\n          );\n        })}\n      </>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div>\n      <h1>TFT Comps</h1>\n      <Composition />\n      <ChampionSelector />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}